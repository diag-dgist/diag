{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-emma-core-src-templates-project-query-tsx-content-file-path-content-projects-labprojects-index-mdx-ee420522cfb28c0f3613.js","mappings":"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","sources":["webpack://emma/./content/projects/labprojects/LabProjects.tsx","webpack://emma/./content/projects/labprojects/index.mdx","webpack://emma/./node_modules/@lekoarts/gatsby-theme-emma-core/src/templates/project-query.tsx","webpack://emma/./src/@lekoarts/gatsby-theme-emma/components/project.tsx","webpack://emma/./node_modules/@lekoarts/gatsby-theme-emma/src/@lekoarts/gatsby-theme-emma-core/components/project.tsx"],"sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\n\r\ntype Props = {\r\n  title: string\r\n  description: string\r\n  image: string\r\n}\r\n\r\nconst LabProjects = ({ title, description, image }: Props) => (\r\n  <div\r\n    style={{\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-between\",\r\n    }}\r\n  >\r\n    <p style={{\r\n      fontWeight: \"bold\",\r\n      fontSize: \"1.5rem\"}}>\r\n      <br/>\r\n      üìå {title}\r\n    </p>\r\n    <div\r\n      style={{\r\n        flex: \"1 1 300px\",\r\n        minWidth: \"300px\",\r\n        fontSize: \"1.2rem\",\r\n        marginRight: \"1rem\"\r\n      }}\r\n    >\r\n      {description}\r\n    </div><br/><br/>\r\n\r\n    <img\r\n      src={image}\r\n      style={{\r\n        flex: \"1 1 300px\",\r\n        maxWidth: \"480px\",\r\n        width: \"100%\",\r\n        marginTop: \"1rem\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n      }}\r\n    />\r\n  </div>\r\n)\r\n\r\nexport default LabProjects\r\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport LabProjects from \"./LabProjects\";\nimport projects from \"./projects.json\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Our research projects include but are not limited to the following list.\\r\\nWe are open to discuss new project ideas in the topic of Human-Computer Interaction, Human-AI Interaction, Crowdsourcing,\\r\\nSocial Computing, or any other related domains.\\r\\nPlease feel free to contact us if you have exciting ideas.\"), \"\\n\", React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\"\n    }\n  }, projects.map((project, index) => React.createElement(LabProjects, Object.assign({\n    key: index\n  }, project)))), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h4, null, \"üóÇÔ∏è Past Projects\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"img\", {\n    src: \"/past_projects.png\",\n    alt: \"Past Projects\",\n    style: {\n      width: \"100%\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/Users/engin/Documents/_github/diag/content/projects/labprojects/index.mdx\";\nimport ProjectComponent, {Head} from \"../components/project\";\nProjectComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ProjectComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"4065080364\";\n","/** @jsx jsx */\r\nimport { animated, useSpring, config } from \"react-spring\"\r\nimport type { HeadFC, PageProps } from \"gatsby\"\r\nimport { Container, jsx, Flex, Heading } from \"theme-ui\"\r\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\r\nimport Layout from \"./layout\"\r\nimport Hero from \"./hero\"\r\nimport ProjectInfo from \"./project-info\"\r\nimport SEO from \"./seo\"\r\n\r\nexport type EmmaProjectProps = {\r\n  project: {\r\n    excerpt: string\r\n    client: string\r\n    color: string\r\n    date: string\r\n    service: string\r\n    slug: string\r\n    title: string\r\n    cover: {\r\n      childImageSharp: {\r\n        gatsbyImageData: IGatsbyImageData\r\n        resize: {\r\n          src: string\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst Project: React.FC<React.PropsWithChildren<PageProps<EmmaProjectProps>>> = ({ data: { project }, children }) => {\r\n  const titleProps = useSpring({\r\n    config: config.slow,\r\n    from: { opacity: 0, transform: `translate3d(0, -30px, 0)` },\r\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\r\n  })\r\n  const infoProps = useSpring({ config: config.slow, delay: 500, from: { opacity: 0 }, to: { opacity: 1 } })\r\n  const contentProps = useSpring({ config: config.slow, delay: 1000, from: { opacity: 0 }, to: { opacity: 1 } })\r\n\r\n  return (\r\n    <Layout>\r\n      <Hero image={project.cover.childImageSharp.gatsbyImageData} color={project.color}>\r\n        <Flex\r\n          sx={{\r\n            position: `absolute`,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            maxWidth: `5xl`,\r\n            margin: `0 auto`,\r\n            padding: 4,\r\n            zIndex: 2,\r\n            flexDirection: `column`,\r\n          }}\r\n        >\r\n          <Heading as=\"h1\" variant=\"styles.h1\">\r\n            {project.client}\r\n          </Heading>\r\n          <animated.div style={titleProps}>\r\n            <Heading as=\"h2\" variant=\"styles.h3\">\r\n              {project.title}\r\n            </Heading>\r\n          </animated.div>\r\n        </Flex>\r\n      </Hero>\r\n      <Container>\r\n        <animated.div style={contentProps}>{children}</animated.div>\r\n      </Container>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Project\r\n\r\nexport const Head: HeadFC<EmmaProjectProps> = ({ data: { project } }) => (\r\n  <SEO\r\n    title={project.title}\r\n    description={project.excerpt}\r\n    pathname={project.slug}\r\n    image={project.cover.childImageSharp.resize!.src}\r\n  >\r\n    <meta name=\"twitter:label1\" value=\"Client\" />\r\n    <meta name=\"twitter:label2\" value=\"Date\" />\r\n    <meta name=\"twitter:data1\" value={project.client} />\r\n    <meta name=\"twitter:data2\" value={project.date} />\r\n  </SEO>\r\n)\r\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Project, { Head, EmmaProjectProps } from \"../../../components/project\"\n\nexport default function EmmaCoreProject({ ...props }: PageProps<EmmaProjectProps>) {\n  return <Project {...props} />\n}\n\nexport { Head }\n"],"names":["_ref","title","description","image","jsx","style","display","flexWrap","alignItems","justifyContent","fontWeight","fontSize","flex","minWidth","marginRight","src","maxWidth","width","marginTop","marginLeft","_createMdxContent","props","_components","Object","assign","p","h4","_provideComponents","components","React","projects","map","project","index","LabProjects","key","alt","wrapper","MDXLayout","GatsbyMDXWrapper","ProjectComponent","GATSBY_COMPILED_MDX","data","children","titleProps","useSpring","config","slow","from","opacity","transform","to","contentProps","delay","Layout","Hero","cover","childImageSharp","gatsbyImageData","color","Flex","sx","position","bottom","left","right","margin","padding","zIndex","flexDirection","Heading","as","variant","client","animated","div","Container","Head","_ref2","SEO","excerpt","pathname","slug","resize","name","value","date","EmmaCoreProject","Project"],"sourceRoot":""}